x = rand(5,5);

x = reshape(x,25,[]);

[d, n] = size(x);

h1 = 3; % first layer
h2 = 2; % second layer
t = 1;

% layer 1 - weight initializations
w_l_1 = initialize_weights(h1, d);
w_r_1 = initialize_weights(h1, d);
b_l_1 = initialize_weights(h1, 1);
b_r_1 = initialize_weights(h1, 1);

% layer 2 - weight initializations
w_l_2 = initialize_weights(h2, h1);
w_r_2 = initialize_weights(h2, h1);
w_lr_2 = initialize_weights(h2, 2*h1);
b_l_2 = initialize_weights(h2, 1);
b_r_2 = initialize_weights(h2, 1);
b_lr_2 = initialize_weights(h2, 1);

% layer 3 - weight initializations
w_3 = initialize_weights(1, h2);
b_3 = initialize_weights(1, 1);



% do a forward pass
        [a_l_1, a_r_1, ...
         z_l_1, z_r_1, ...
         a_l_2, a_r_2, a_lr_2, ...
         z_2, a_3] = mlp_forward(x, x, ...
                                 w_l_1, b_l_1, w_r_1, b_r_1, ...
                                 w_l_2, b_l_2, w_r_2, b_r_2, w_lr_2, b_lr_2, ...
                                 w_3, b_3);

        % do a backward pass
        [dw_l_1, dw_r_1, ...
         dw_l_2, dw_r_2, dw_lr_2, ...
         dw_3, ...
         r_l_1, r_r_1, ...
         r_l_2, r_r_2, r_lr_2, ...
         r_3] = mlp_backward(x, x, t, ...
                             a_l_1, a_r_1, ...
                             a_l_2, a_r_2, a_lr_2, ...
                             a_3, ...
                             z_l_1, z_r_1, ...
                             z_2, ...
                             w_l_2, w_r_2, w_lr_2, w_3);

e2 = logerr(t,a_3);


w_l_2(1,1) = w_l_2(1,1) + 1e-6;

% do a forward pass
        [a_l_1, a_r_1, ...
         z_l_1, z_r_1, ...
         a_l_2, a_r_2, a_lr_2, ...
         z_2, a_3] = mlp_forward(x, x, ...
                                 w_l_1, b_l_1, w_r_1, b_r_1, ...
                                 w_l_2, b_l_2, w_r_2, b_r_2, w_lr_2, b_lr_2, ...
                                 w_3, b_3);

        % do a backward pass
        [dw_l_1, dw_r_1, ...
         dw_l_2, dw_r_2, dw_lr_2, ...
         dw_3, ...
         r_l_1, r_r_1, ...
         r_l_2, r_r_2, r_lr_2, ...
         r_3] = mlp_backward(x, x, t, ...
                             a_l_1, a_r_1, ...
                             a_l_2, a_r_2, a_lr_2, ...
                             a_3, ...
                             z_l_1, z_r_1, ...
                             z_2, ...
                             w_l_2, w_r_2, w_lr_2, w_3);
                         
 e1 = logerr(t,a_3);
 
 der = (e1-e2)/1e-6
 disp(dw_l_2)
